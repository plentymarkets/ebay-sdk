<?php
/**
 * The contents of this file was generated using the WSDLs as provided by eBay.
 *
 * DO NOT EDIT THIS FILE!
 */

namespace EbaySdk\Api\Fulfillment\Types;

/**
 *
 * @property \EbaySdk\Fulfillment\Types\Buyer $buyer
 * @property string $buyerCheckoutNotes
 * @property \EbaySdk\Fulfillment\Types\CancelStatus $cancelStatus
 * @property string $creationDate
 * @property string[] $fulfillmentHrefs
 * @property \EbaySdk\Fulfillment\Types\FulfillmentStartInstruction[] $fulfillmentStartInstructions
 * @property string $lastModifiedDate
 * @property \EbaySdk\Fulfillment\Types\LineItem[] $lineItems
 * @property \EbaySdk\Fulfillment\Types\OrderFulfillmentStatus $orderFulfillmentStatus
 * @property string $orderId
 * @property \EbaySdk\Fulfillment\Enums\OrderPaymentStatusEnum $orderPaymentStatus
 * @property \EbaySdk\Fulfillment\Types\PaymentSummary $paymentSummary
 * @property \EbaySdk\Fulfillment\Types\PricingSummary $pricingSummary
 * @property string $sellerId
 */
class Order extends \Plenty\Modules\Market\Ebay\Api\Types\BaseType
{
    /**
     * @var array Properties belonging to objects of this class.
     */
    private static $propertyTypes = [
        'buyer' => [
            'type' => 'EbaySdk\Fulfillment\Types\Buyer',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'buyer'
        ],
        'buyerCheckoutNotes' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'buyerCheckoutNotes'
        ],
        'cancelStatus' => [
            'type' => 'EbaySdk\Fulfillment\Types\CancelStatus',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'cancelStatus'
        ],
        'creationDate' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'creationDate'
        ],
        'fulfillmentHrefs' => [
            'type' => 'string',
            'repeatable' => true,
            'attribute' => false,
            'elementName' => 'fulfillmentHrefs'
        ],
        'fulfillmentStartInstructions' => [
            'type' => 'EbaySdk\Fulfillment\Types\FulfillmentStartInstruction',
            'repeatable' => true,
            'attribute' => false,
            'elementName' => 'fulfillmentStartInstructions'
        ],
        'lastModifiedDate' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'lastModifiedDate'
        ],
        'lineItems' => [
            'type' => 'EbaySdk\Fulfillment\Types\LineItem',
            'repeatable' => true,
            'attribute' => false,
            'elementName' => 'lineItems'
        ],
        'orderFulfillmentStatus' => [
            'type' => 'EbaySdk\Fulfillment\Types\OrderFulfillmentStatus',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'orderFulfillmentStatus'
        ],
        'orderId' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'orderId'
        ],
        'orderPaymentStatus' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'orderPaymentStatus'
        ],
        'paymentSummary' => [
            'type' => 'EbaySdk\Fulfillment\Types\PaymentSummary',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'paymentSummary'
        ],
        'pricingSummary' => [
            'type' => 'EbaySdk\Fulfillment\Types\PricingSummary',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'pricingSummary'
        ],
        'sellerId' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'sellerId'
        ]
    ];

    /**
     * @param array $values Optional properties and values to assign to the object.
     */
    public function __construct(array $values = [])
    {
        list($parentValues, $childValues) = self::getParentValues(self::$propertyTypes, $values);

        parent::__construct($parentValues);

        if (!array_key_exists(__CLASS__, self::$properties)) {
            self::$properties[__CLASS__] = array_merge(self::$properties[get_parent_class()], self::$propertyTypes);
        }

        $this->setValues(__CLASS__, $childValues);
    }
}
