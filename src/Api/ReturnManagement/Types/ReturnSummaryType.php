<?php
/**
 * The contents of this file was generated using the WSDLs as provided by eBay.
 *
 * DO NOT EDIT THIS FILE!
 */

namespace EbaySdk\Api\ReturnManagement\Types;

/**
 *
 * @property \EbaySdk\ReturnManagement\Types\ReturnIdType $ReturnId
 * @property \EbaySdk\ReturnManagement\Enums\ReturnType $ReturnType
 * @property \EbaySdk\ReturnManagement\Types\ReturnUserType $otherParty
 * @property \EbaySdk\ReturnManagement\Types\ReturnRequestType $returnRequest
 * @property \EbaySdk\ReturnManagement\Enums\ReturnStatusType $status
 * @property \EbaySdk\ReturnManagement\Types\ReturnResponseDueType $responseDue
 * @property \DateTime $creationDate
 * @property \DateTime $lastModifiedDate
 */
class ReturnSummaryType extends \Plenty\Modules\Market\Ebay\Api\Types\BaseType
{
    /**
     * @var array Properties belonging to objects of this class.
     */
    private static $propertyTypes = [
        'ReturnId' => [
            'type' => 'EbaySdk\ReturnManagement\Types\ReturnIdType',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'ReturnId'
        ],
        'ReturnType' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'ReturnType'
        ],
        'otherParty' => [
            'type' => 'EbaySdk\ReturnManagement\Types\ReturnUserType',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'otherParty'
        ],
        'returnRequest' => [
            'type' => 'EbaySdk\ReturnManagement\Types\ReturnRequestType',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'returnRequest'
        ],
        'status' => [
            'type' => 'string',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'status'
        ],
        'responseDue' => [
            'type' => 'EbaySdk\ReturnManagement\Types\ReturnResponseDueType',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'responseDue'
        ],
        'creationDate' => [
            'type' => 'DateTime',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'creationDate'
        ],
        'lastModifiedDate' => [
            'type' => 'DateTime',
            'repeatable' => false,
            'attribute' => false,
            'elementName' => 'lastModifiedDate'
        ]
    ];

    /**
     * @param array $values Optional properties and values to assign to the object.
     */
    public function __construct(array $values = [])
    {
        list($parentValues, $childValues) = self::getParentValues(self::$propertyTypes, $values);

        parent::__construct($parentValues);

        if (!array_key_exists(__CLASS__, self::$properties)) {
            self::$properties[__CLASS__] = array_merge(self::$properties[get_parent_class()], self::$propertyTypes);
        }

        if (!array_key_exists(__CLASS__, self::$xmlNamespaces)) {
            self::$xmlNamespaces[__CLASS__] = 'xmlns="http://www.ebay.com/marketplace/returns/v1/services"';
        }

        $this->setValues(__CLASS__, $childValues);
    }
}
